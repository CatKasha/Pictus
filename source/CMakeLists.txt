cmake_minimum_required (VERSION 2.8)

if (WIN32)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wpedantic -std=c++1y -municode")
	SET(Boost_USE_STATIC_LIBS ON)
else()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y")
endif()

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-long-long -pedantic -Wno-switch -Werror -Wextra -Wno-unused-parameter")
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-switch")
endif()

option(ENABLE_CODE_COVERAGE "Enable code coverage generation (if available)" OFF)
if(ENABLE_CODE_COVERAGE)
	add_compile_options(-fprofile-arcs -ftest-coverage)
	link_libraries("gcov")
endif()

find_package(Boost 1.55.0 COMPONENTS system thread locale filesystem REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
link_libraries(${Boost_LIBRARIES})

add_subdirectory (deps)
add_subdirectory (orzTest)
add_subdirectory (illaTest)
add_subdirectory (MetadataTest)
add_subdirectory (LoadTest)
add_subdirectory (FilterTest)
add_subdirectory (pictustest)
add_subdirectory (Pictus)

if(WIN32)
	add_subdirectory (PictThumbs)
endif()
